/*------------------------------------*\
#FONTS
\*------------------------------------*/

/*------------------------------------*\
#Variables
\*------------------------------------*/

:root {
  /* typography */
  --global-root-font-size: 16px;
  --global-question-title-lineheight: calc(var(--global-root-font-size) * 1.5);
  --global-question-title-fontsize: calc(var(--global-root-font-size) * 1.3);
  --global-timer-size: 6.25rem;
  --global-score-size: calc(var(--global-timer-size) * 1.2);
  --global-timer-fontsize: 2rem;

  --global-question-option-fontsize: 1rem;

  /* colors */
  --global-color-alpha-light-x: #d0dee7;
  --global-color-alpha-light: #75bce4;
  --global-color-alpha: #0c6fbc;
  --global-color-light: white;

  --global-color-correct: #0a6d11;
  --global-color-false: #e7082d;
  --global-color-selected-false: #e4152a;
  --global-question-option-border: 2px solid#cbdfee;

  --global-color-neutral-xxxx-light: #f0f0f7;
  --global-color-neutral-xxx-light: #ebebf2;
  --global-color-neutral-xx-light: #d7dae2;
  --global-color-neutral-x-light: #bcbccb;
  --global-color-neutral-light: #a5a4bf;
  --global-color-neutral: #808495;
  --global-color-neutral-dark: #4d4f5c;
  --global-color-neutral-x-dark: #43425d;
  --global-color-neutral-xx-dark: #3b3b53;

  /* Shadows */
  --global-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.025), 0 2px 6px rgba(0, 0, 0, 0.05);
  --global-box-shadow-lg: 0 0 0 1px rgba(0, 0, 0, 0.025), 0 2px 10px rgba(0, 0, 0, 0.1);

  --global-input-shadow: 0 2px 3px rgba(0, 0, 0, 0.05);
  --global-input-focus-shadow: 0 0 5px var(--global-color-alpha-light);

  /* radius */
  --global-borderRadius: calc(4rem / var(--global-root-font-size));
  --global-timer-borderradius: 50%;
  /* Whitespace */
  /* 
        global font-size = 15px
        baseline = 5px        
        15px = 1rem
        5px = 1rem/3
        This would equal to 0.3333333...rem but let the browser do the math
    */
  --global-baseline: calc(1rem / 3);
  --global-whitespace-xxs: var(--global-baseline); /* = 5px */
  --global-whitespace-xs: calc(var(--global-baseline) * 2); /* = 10px */
  --global-whitespace-sm: calc(var(--global-baseline) * 3); /* = 15px */
  --global-whitespace-md: calc(var(--global-baseline) * 4); /* = 20px */
  --global-whitespace-lg: calc(var(--global-baseline) * 5); /* = 25px */
  --global-whitespace-xl: calc(var(--global-baseline) * 6); /* = 30px */

  /* transitions */
  --global-transition-alpha: 0.2s;
  --global-transition-beta: 1s;

  --pi: 3.14159265359;
}

/*------------------------------------*\
#GENERIC
\*------------------------------------*/

/*
    Generic: Page
    ---
    Global page styles + universal box-sizing:
*/

html {
  /* font-size: 15px; */
  font-size: 100%; /* =16px */
  line-height: 1.6666667em; /* = 25px */
  font-family: 'Inter', Helvetica, arial, sans-serif;
  color: var(--global-color-neutral-dark);
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  background-color: #7ca5db;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

/*
* Remove text-shadow in selection highlight:
* https://twitter.com/miketaylr/status/12228805301
*
* Customize the background color to match your design.
*/

::-moz-selection {
  background: var(--global-color-alpha);
  color: white;
  text-shadow: none;
}

::selection {
  background: var(--global-color-alpha);
  color: white;
  text-shadow: none;
}

/*------------------------------------*\
#Elements
\*------------------------------------*/

/*
Elements: Images
---
Default markup for images to make them responsive
*/

img {
  max-width: 100%;
  vertical-align: top;
}

/*
    Elements: typography
    ---
    Default markup for typographic elements
*/

h1,
h2,
h3 {
  font-weight: 700;
}

h1 {
  /* font-size: 36px; */
  font-size: 36px;
  line-height: calc(var(--global-baseline) * 10);
  margin: 0 0 var(--global-whitespace-md);
}

h2 {
  /* font-size: 28px; */
  /* font-size: 1.8666666667rem; */
  font-size: calc(28rem / var(--global-root-font-size));
  font-weight: normal;
  line-height: calc(var(--global-baseline) * 8);
  margin: 0 0 var(--global-whitespace-lg);
}

h3 {
  /* font-size: 18px; */
  font-size: 1.2rem;
  line-height: calc(var(--global-baseline) * 6);
  margin: 0 0 var(--global-whitespace-md);
}

h4,
h5,
h6 {
  /* font-size: 15px; */
  font-size: 1rem;
  font-weight: 600;
  line-height: calc(var(--global-baseline) * 5);
  margin: 0 0 var(--global-whitespace-md);
}

p,
ol,
ul,
dl,
table,
address,
figure {
  margin: 0 0 var(--global-whitespace-md);
}

ul,
ol {
  padding-left: 24px;
}

li ul,
li ol {
  margin-bottom: 0;
}

blockquote {
  font-style: normal;
  font-size: 23px;
  line-height: calc(var(--global-baseline) * 5);
  margin: 0 0 var(--global-whitespace-md);
}

blockquote * {
  font-size: inherit;
  line-height: inherit;
}

figcaption {
  font-weight: 400;
  font-size: 12px;
  line-height: 16px;
  margin-top: 8px;
}

hr {
  border: 0;
  height: 1px;
  background: LightGrey;
  margin: 0 0 var(--global-whitespace-md);
}

a {
  transition: all var(--global-transition-alpha);
  color: var(--global-color-beta);
  outline-color: var(--global-color-beta);
  outline-width: medium;
  outline-offset: 2px;
}

a:visited,
a:active {
  color: var(--global-color-beta);
}

a:hover,
a:focus {
  color: var(--global-color-alpha);
}

label,
input {
  display: block;
}

select {
  width: 100%;
}

input::placeholder {
  color: var(--global-color-neutral-light);
}

/*------------------------------------*\
#OBJECTS
\*------------------------------------*/

/*
    Objects: Row
    ---
    Creates a horizontal row that stretches the viewport and adds padding around children
*/

.o-row {
  position: relative;
  padding: var(--global-whitespace-lg) var(--global-whitespace-lg) var(--global-baseline);
}

/*
    Objects: Container
    ---
    Creates a horizontal container that sets de global max-width
*/

.o-container {
  margin-left: auto;
  margin-right: auto;
  max-width: 78em; /* 78 * 15px = 1170 */
  width: 100%;
}

/*
    Objects: List
    ---
    Small reusable object to remove default list styling from lists
*/

.o-list {
  list-style: none;
  padding: 0;
}

/*
    Object: Button reset
    ---
    Small button reset object
*/

.o-button-reset {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  background: transparent;

  /* inherit font & color from ancestor */
  color: inherit;
  font: inherit;

  /* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */
  line-height: normal;

  /* Corrects font smoothing for webkit */
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;

  /* Corrects inability to style clickable `input` types in iOS */
  -webkit-appearance: none;
}

/*
    Object: Hide accessible
    ---
    Accessibly hide any element
*/

.o-hide-accessible {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/*------------------------------------*\
#COMPONENTS
\*------------------------------------*/

/*
    Component: Logo
    ---
    Website main logo
*/

.c-logo {
  margin: 0;
  /* font-size: 15px; */
  font-size: 1rem;
  font-weight: bold;
  text-transform: uppercase;
  /* letter-spacing: 2px; */
  letter-spacing: 0.13333333em; /* = 2px */
  line-height: var(--global-whitespace-md);
  color: #fff;
}

/*
  Component: Shake
*/
.c-shake {
  animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  transform: translate3d(0, 0, 0);
  perspective: 1000px;
}
.c-shake-infinite {
  animation: shake-pause 4.72s cubic-bezier(0.36, 0.07, 0.19, 0.97) both infinite;
  transform: translate3d(0, 0, 0);
  perspective: 1000px;
}
@keyframes shake-pause {
  0% {
    transform: translate(0, 0);
  }
  1.5% {
    transform: translate(5px, 0);
  }
  3% {
    transform: translate(0, 0);
  }
  5% {
    transform: translate(5px, 0);
  }
  7% {
    transform: translate(0, 0);
  }
  9% {
    transform: translate(5px, 0);
  }
  11% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(0, 0);
  }
}

@keyframes shake {
  10%,
  90% {
    transform: translate3d(-1px, 0, 0);
  }
  20%,
  80% {
    transform: translate3d(2px, 0, 0);
  }

  30%,
  50%,
  70% {
    transform: translate3d(-2px, 0, 0);
  }
  40%,
  60% {
    transform: translate3d(2px, 0, 0);
  }
}
/*
    Component: question
    ---
    Global question component
*/
.c-question-frame {
  display: grid;
  align-items: center;
  justify-content: center;
}

.c-score-main {
  height: 70vh;
  width: 95vw;
  background-color: var(--global-color-light);
  margin: auto;
  margin-top: 5rem;
  display: block;
  border-radius: 2rem;
}

.c-score-circle {
  background-color: var(--global-color-light);
  border: var(--global-question-option-border);
  width: var(--global-score-size);
  height: var(--global-score-size);
  margin: auto;
  border-radius: var(--global-timer-borderradius);
  font-size: var(--global-timer-fontsize);
  text-align: center;
  display: grid;
  justify-content: center;

  grid-column: 2 / span 2;
  grid-row: 2 / span 2;
}
.c-score-circle p {
  margin: auto;
}
.c-score-circle--zoom {
  transition: transform 0.5s;
  transform: scale(1.6);
}
.c-score-button-main {
  width: 100%;
  margin-top: 3rem;
  display: grid;
  justify-content: center;
  grid-column: 2 / span 2;
  grid-row: 4;
}
.c-score-svg-main {
  width: 100%;
  height: 80px;
}
.c-score-svg-main svg {
  width: 80px;
  height: 80px;
}
#scoreSvg2 {
  margin: 5px;
  grid-row: 3 / span 2;
  grid-column: 2 / span 1;
}
#scoreSvg1 svg {
  /* background-color: green; */
  margin-left: 10rem;
  transform: scaleX(-1);
}
#scoreSvg2 svg {
  /* background-color: pink; */
  /* margin-right: 10rem; */
}
#scoreSvg1 {
  grid-row: 3 / span 2;
  grid-column: 3 / span 1;
}
.c-score-title {
  font-size: var(--global-question-title-fontsize);
  line-height: var(--global-question-title-lineheight);
  grid-column: 2 / span 2;
  grid-row: 1;
  text-align: center;
  margin: 2rem auto;
  line-height: 4rem;
}
.c-question-main {
  min-width: 80vw;
  min-height: 80vh;
  height: 90%;
  width: 90%;
  background-color: var(--global-color-light);
  margin: auto;
  margin-top: 5rem;
  display: block;
  border-radius: 2rem;
}
.c-question-header {
  position: relative;
  background-color: var(--global-color-alpha);
  grid-row: 1;
  grid-column: 2 / span 2;
  height: 40px;
  width: 200px;
  border-radius: 5px;
  margin: 0 auto;
  color: var(--global-color-light);

  display: grid;
  justify-content: center;
}
.c-question-header p {
  text-align: center;
  margin: auto;
}
/* timer */
.base-timer {
  position: absolute;
  width: 100px;
  height: 100px;
}

.base-timer__svg {
  transform: scaleX(-1);
}

.base-timer__circle {
  fill: none;
  stroke: none;
}

.base-timer__path-elapsed {
  stroke-width: 7px;
  stroke: grey;
}

.base-timer__path-remaining {
  stroke-width: 7px;
  stroke-linecap: round;
  transform: rotate(90deg);
  transform-origin: center;
  transition: 1s linear all;
  fill-rule: nonzero;
  stroke: currentColor;
}

.base-timer__path-remaining.blue {
  color: var(--global-color-alpha);
}

.base-timer__path-remaining.orange {
  color: orange;
}

.base-timer__path-remaining.red {
  color: red;
}

.base-timer__label {
  position: absolute;
  width: 100px;
  height: 100px;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 32px;
}
.c-question-timer {
  /* background-color: var(--global-color-alpha); */
  width: var(--global-timer-size);
  height: var(--global-timer-size);
  margin: auto;
  border-radius: var(--global-timer-borderradius);
  font-size: 18px;
  text-align: center;
  display: grid;
  justify-content: center;

  grid-column: 1;
  grid-row: 1;
}
.c-question-timer p {
  margin: auto;
  font-size: var(--global-timer-fontsize);
  color: var(--global-color-light);
}
.c-question-count {
  width: 80px;
  margin: 1rem auto auto auto;
  display: grid;
  gap: 1px;
  grid-template-columns: repeat(5, 1fr);
  align-items: center;
  grid-row: 1;
  grid-column: 4 / span 2;
}
.c-question-count div {
  width: 10px;
  height: 10px;
  border: 1px grey solid;
  background-color: white;
  border-radius: 50%;
  align-items: center;
  display: grid;
  justify-content: center;
  align-content: center;
}
.c-question-count div svg {
  width: 20px;
  height: 20px;
}
.c-question-title {
  font-size: var(--global-question-title-fontsize);
  line-height: var(--global-question-title-lineheight);
  width: 90%;
  grid-column: 2 / span 2;
  grid-row: 1;
  text-align: center;
  margin: 2rem auto;
}
.c-question-subtitle {
  font-size: 0.75rem;
  width: 80%;
  grid-column: 2 / span 2;
  grid-row: 1;
  margin: auto auto 0.5rem;
  line-height: var(--global-root-font-size);
  text-align: center;
}
.c-question-subtitle--zoom {
  transition: transform 0.6s;
  transform: scale(1.32);
}
.c-question-options {
  text-align: center;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 5rem 5rem;
  gap: 0px;
}
.c-question-option {
  max-width: 50%;
  min-width: 30%;
  min-height: 50%;
  margin: auto;
  margin-bottom: 16px;
  /* background-color: pink; */
  border-radius: 10px;
  font-size: var(--global-question-option-fontsize);
  /* color: white; */
  display: grid;
  border: var(--global-question-option-border);
  background-color: var(--global-color-light);
  max-width: 100%;

  margin: 10px 20px;
}
.c-question-option--text {
  margin: auto;
  text-align: center;
}
.c-question-button-main {
  width: 100%;
  display: grid;
  justify-content: center;
  grid-column: 2 / span 2;
  margin-top: 1rem;
}
.c-question-button {
  margin: auto;
  text-align: center;
  color: white;
  margin: auto;

  height: 40px;
  width: 100px;
  grid-row: 4;
  background-color: var(--global-color-alpha);
  border-radius: 30px;
  display: grid;
  justify-content: center;
  border: none;
}
.c-question-button p {
  text-align: center;
  margin: auto;
}
button:disabled,
button[disabled],
button:disabled:hover,
button:disabled:active,
button:disabled:focus {
  border: 1px solid grey;
  background-color: white;
  color: #666666;
}

.c-question-option:hover {
  background-color: var(--global-color-alpha-light-x);
  color: var(--global-color-alpha);
  border: 1px solid var(--global-color-alpha);
}
.c-question-button:hover {
  background-color: var(--global-color-alpha-light-x);
  color: var(--global-color-alpha);
  border: 1px solid var(--global-color-alpha);
}
.c-question-option--selected {
}
.c-question-option--correct,
.c-question-option--correct:hover,
.c-question-option--correct:focus,
.c-question-option--correct:active {
  background-color: var(--global-color-correct);
  color: var(--global-color-light);
  transition: transform 0.3s;
  transform: scale(1.1);
}

.c-question-option--incorrect,
.c-question-option--incorrect:hover,
.c-question-option--incorrect:active,
.c-question-option--incorrect:focus {
  background-color: white;
  color: black;

  border: 2px solid var(--global-color-false);
}
.c-question-option--corrected,
.c-question-option--corrected:hover,
.c-question-option--corrected:active,
.c-question-option--corrected:focus {
  border: 2px solid var(--global-color-correct);
  color: var(--global-color-correct);
}
.c-question-option--false,
.c-question-option--false:hover,
.c-question-option--false:active,
.c-question-option--false:focus {
  background-color: var(--global-color-selected-false);
  color: var(--global-color-light);
}
@media (min-width: 50em) {
  .c-question-count {
    width: 80px;
    margin: 1rem 5rem auto auto;
  }
  .c-score-title {
    margin: 3rem auto;
  }
  .c-score-main {
    display: grid;
    height: 70vh;
    width: 80vw;
    grid-template-columns: 10rem 1fr 1fr 10rem;
    grid-template-rows: 6rem 1fr 1fr 1fr 1fr;
  }

  .c-question-main {
    display: grid;
    grid-template-columns: 10rem 1fr 1fr 10rem;
    grid-template-rows: 13rem 1fr 1fr 1fr 1fr;
    height: 80%;
    width: 100%;
    max-width: 90vw;
    margin: auto;
    padding: auto;
    margin-top: 5rem;
  }
  .c-question-options {
    grid-column: 2 / span 2;
    grid-row: 2 / span 2;
    width: 100%;

    /* background-color: blue; */
  }
  .c-question-option {
    max-width: 100%;
    width: 90%;
    margin: 10px;
  }

  .c-question-title {
    margin: auto;
    width: 30rem;
    height: 60px;
  }
}

/*------------------------------------*\
#UTILITIES
\*------------------------------------*/

/*
    Utilities: color
    ---
    Utility classes to put specific colors onto elements
*/

.u-color-neutral {
  color: var(--global-color-neutral);
}

.u-color-neutral-dark {
  color: var(--global-color-neutral-dark);
}

/*
    Utilities: spacing
    ---
    Utility classes to put specific margins and paddings onto elements
*/

.u-pt-clear {
  padding-top: 0 !important;
}

.u-mb-clear {
  margin-bottom: 0 !important;
}

.u-mb-xxs {
  margin-bottom: var(--global-whitespace-xxs) !important;
}

.u-mb-xs {
  margin-bottom: var(--global-whitespace-xs) !important;
}

.u-mb-sm {
  margin-bottom: var(--global-whitespace-sm) !important;
}

.u-mb-md {
  margin-bottom: var(--global-whitespace-md) !important;
}

.u-mb-lg {
  margin-bottom: var(--global-whitespace-lg) !important;
}

.u-mb-xl {
  margin-bottom: var(--global-whitespace-xl) !important;
}

/*
    Utilities: max-width
    ---
    Utility classes to put specific max widths onto elements
*/

.u-max-width-xs {
  max-width: 27em !important;
}

.u-max-width-sm {
  max-width: 39em !important;
}

.u-max-width-md {
  max-width: 50em !important;
}

.u-max-width-lg {
  max-width: 63.5em !important;
}

.u-max-width-none {
  max-width: none !important;
}

/*
    Utilities: align
    ---
    Utility classes align text or components
*/

.u-align-text-center {
  text-align: center;
}

.u-align-center {
  margin: 0 auto;
}

/*
    Utilities: text
    Utility classes to create smaller or bigger test
*/

.u-text-xs {
  font-size: calc(11rem / var(--global-root-font-size));
}

.u-text-sm {
  font-size: calc(13rem / var(--global-root-font-size));
  line-height: calc(var(--global-baseline) * 4);
}

/*
    Utilities: span
    Utility classes to span grid items across the x and y axis
*/

/* x: horizontal */

@media (min-width: 62em) {
  .u-x-span-3-bp3 {
    grid-column: span 3;
  }

  .u-x-span-4-bp3 {
    grid-column: span 4;
  }

  .u-x-span-6-bp3 {
    grid-column: span 6;
  }

  .u-x-span-8-bp3 {
    grid-column: span 8;
  }

  .u-x-span-9-bp3 {
    grid-column: span 9;
  }
}

/* y: vertical */

@media (min-width: 62em) {
  .u-y-span-2-bp3 {
    grid-row: span 2;
  }
}

/*------------------------------------*\
#MEDIA
\*------------------------------------*/

/*
    Media Queries
    ---
    EXAMPLE Media Queries for Responsive Design.
    These examples override the primary ('mobile first') styles.
    USE THEM INLINE!
*/

/* Extra small devices (portrait phones, less than 576px)
No media query since this is the default in mobile first design
*/

/* Small devices (landscape phones, 576px and up)
@media (min-width: 576px) {}
*/

/* Medium devices (tablets, 768px and up)
@media (min-width: 768px) {}
*/

/* Large devices (landscape tablets, desktops, 62em and up)
@media (min-width: 62em) {}
*/

/* Extra large devices (large desktops, 1200px and up)
@media (min-width: 1200px) {}
*/

/*
    Print styles.
    ---
    Inlined to avoid the additional HTTP request:
    http://www.phpied.com/delay-loading-your-print-css/
*/

@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster:
        http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: ' (' attr(href) ')';
  }
  abbr[title]:after {
    content: ' (' attr(title) ')';
  }
  /*
    * Don't show links that are fragment identifiers,
    * or use the `javascript:` pseudo protocol
    */
  a[href^='#']:after,
  a[href^='javascript:']:after {
    content: '';
  }
  pre {
    white-space: pre-wrap !important;
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  /*
    * Printing Tables:
    * http://css-discuss.incutio.com/wiki/Printing_Tables
    */
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}
